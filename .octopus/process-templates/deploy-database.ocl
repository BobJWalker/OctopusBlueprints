name = "Deploy Database"
description = ""

icon {
    color = "#3CA4F3"
    id = "database"
}

parameter "Template.Database.Package" {
    display_settings = {
        Octopus.ControlType = "Package"
    }
    help_text = "**Required:** The package containing all the DBUp executable and scripts to run.  "
    id = "48e36afc-ca81-44a5-91fe-45eb63e04376"
    label = "Database Package"
    default_value = ""
}

parameter "Template.DbUp.Executable" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The executable of your dotnet console application to run.  Example: `Trident.Database.DbUp.dll`"
    id = "014a047c-9076-481c-a4ee-8401ecc59465"
    label = "DBUp Executable"
    default_value = ""
}

parameter "Template.Database.ConnectionString" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The connection string of the database to modify."
    id = "5065cbf5-e26a-43d8-a8d9-486e153447db"
    label = "Database Connection String"
    default_value = ""
}

parameter "Template.Database.ChangeReportDirectory" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The directory where the delta report will be stored after creation."
    id = "b4a50ab1-e678-4d77-a04c-1f9a0d51a80d"
    label = "Delta Report Directory"
    default_value = "../../#{Octopus.Project.Name}/#{Octopus.Release.Number}/#{Octopus.Environment.Name}"
}

step "build-delta-report" {
    name = "Build Delta Report"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.ExecutionTimeout.Minutes = "15"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $connectionString = $OctopusParameters["Template.Database.ConnectionString"]
                $changeReportDirectory = $OctopusParameters["Template.Database.ChangeReportDirectory"]
                $projectDll = $OctopusParameters["Template.DbUp.Executable"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                $extractedPath = $OctopusParameters["Octopus.Action.Package[Template.Database.Package].ExtractedPath"]
                
                Write-Host "Setting the current location to $extractedPath"
                Set-Location $extractedPath
                $ExecutionLocation = "$extractedPath/$projectDll"
                
                Write-Host "Doing a what-if migration, generating a change report at $changeReportDirectory"
                
                if ((test-path $changeReportDirectory) -eq $false){
                   Write-Host "The directory $changeReportDirectory does not exist, creating it now"
                   New-Item $changeReportDirectory -ItemType "directory"
                }
                
                dotnet $ExecutionLocation --ConnectionString="$connectionString" --PreviewReportPath="$changeReportDirectory"
                
                $generatedReport = "$changeReportDirectory/UpgradeReport.html"
                New-OctopusArtifact -Path "$generatedReport" -Name "$environmentName.UpgradeReport.html"
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }        
    }
}

step "notify-dbas" {
    name = "Notify DBAs"

    action {
        action_type = "Octopus.Email"
        is_required = true
        properties = {
            Octopus.Action.Email.Body = "You can view the the deployment here: #{Octopus.Web.ServerUri}/app#/#{Octopus.Space.Id}/tasks/#{Octopus.Task.Id}"
            Octopus.Action.Email.Subject = "#{Octopus.Project.Name} #{Octopus.Release.Number} to #{Octopus.Environment.Name} has paused and is awaiting review."
            Octopus.Action.Email.To = "hello@octopus.com"
        }
    }
}

step "dbas-approve" {
    name = "DBAs approve"
    start_trigger = "StartWithPrevious"

    action {
        action_type = "Octopus.Manual"
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Please review and verify the migration database report matches your expectations."
            Octopus.Action.Manual.ResponsibleTeamIds = "global/octopus-managers"
        }
    }
}

step "deploy-database-changes" {
    name = "Deploy Database Changes"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.ExecutionTimeout.Minutes = "30"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $connectionString = $OctopusParameters["Template.Database.ConnectionString"]
                $projectDll = $OctopusParameters["Template.DbUp.Executable"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                $extractedPath = $OctopusParameters["Octopus.Action.Package[Template.Database.Package].ExtractedPath"]
                
                Write-Host "Setting the current location to $extractedPath"
                Set-Location $extractedPath
                $ExecutionLocation = "$extractedPath/$projectDll"
                
                dotnet $ExecutionLocation --ConnectionString="$connectionString"
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }        
    }
}
