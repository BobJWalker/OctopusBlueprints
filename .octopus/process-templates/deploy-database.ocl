name = "Deploy Database"
description = "Process template that will deploy a database using DBUp"

parameter "Template.Database.Package" {
    display_settings = {
        Octopus.ControlType = "Package"
    }
    help_text = "**Required:** The package containing all the DBUp executable and scripts to run."
    label = "Database Package"
}

parameter "Template.DbUp.Executable" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The executable of your dotnet console application to run.  Example: `Trident.Database.DbUp.dll`"
    label = "DBUp Executable"
}

parameter "Template.Database.ConnectionString" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The connection string of the database to modify."
    label = "Database Connection String"
}

parameter "Template.Database.ChangeReportDirectory" {
    display_settings = {
        Octopus.ControlType = "SingleLineText"
    }
    help_text = "**Required:** The directory where the delta report will be stored after creation."
    label = "Delta Report Directory"

    value "../../#{Octopus.Project.Name}/#{Octopus.Release.Number}/#{Octopus.Environment.Name}" {}
}

step "build-delta-report" {
    name = "Build Delta Report"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.ExecutionTimeout.Minutes = "15"
            Octopus.Action.RunOnServer = "true"
            Octopus.Action.Script.ScriptBody = <<-EOT
                $connectionString = $OctopusParameters["Template.Database.ConnectionString"]
                $changeReportDirectory = $OctopusParameters["Template.Database.ChangeReportDirectory"]
                $projectDll = $OctopusParameters["Template.DbUp.Executable"]
                $environmentName = $OctopusParameters["Octopus.Environment.Name"]
                $extractedPath = $OctopusParameters["Octopus.Action.Package[Template.Database.Package].ExtractedPath"]
                                
                Write-Host "Setting the current location to $extractedPath"
                Set-Location $extractedPath
                $ExecutionLocation = "$extractedPath/$projectDll"
                                
                Write-Host "Doing a what-if migration, generating a change report at $changeReportDirectory"
                                
                if ((test-path $changeReportDirectory) -eq $false){
                  Write-Host "The directory $changeReportDirectory does not exist, creating it now"
                  New-Item $changeReportDirectory -ItemType "directory"
                }
                                
                dotnet $ExecutionLocation --ConnectionString="$connectionString" --PreviewReportPath="$changeReportDirectory"
                                
                $generatedReport = "$changeReportDirectory/UpgradeReport.html"
                New-OctopusArtifact -Path "$generatedReport" -Name "$environmentName.UpgradeReport.html"
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }

        packages "Template.Database.Package" {
            acquisition_location = "Server"
            properties = {
                Extract = "True"
                PackageParameterName = "Template.Database.Package"
                Purpose = ""
                SelectionMode = "deferred"
            }
        }
    }
}